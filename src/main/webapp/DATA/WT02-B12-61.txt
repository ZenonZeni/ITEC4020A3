
<DOC>
<DOCNO>WT02-B12-61</DOCNO>
<DOCOLDNO>IA087-000625-B048-44</DOCOLDNO>
<DOCHDR>
http://res2.resnet.upenn.edu:80/cis590/reading.091.html 130.91.195.242 19970122063348 text/html 3249
HTTP/1.0 200 OK
Date: Wed, 22 Jan 1997 06:33:50 GMT
Server: Apache/1.1.1
Content-type: text/html
Content-length: 3078
Last-modified: Tue, 22 Nov 1994 06:32:13 GMT
</DOCHDR>
Encrypting filesystem for DOS/Windows available [ an example of externally available systems .. djf] <p>

From: pgut1@cs.aukuni.ac.nz
Subject: Encrypting filesystem for DOS/Windows available
Date: 10 Feb 1994 11:58:55 GMT
Organization: University of Auckland <p>

I have just released the latest beta of SFS, my secure filesystem for DOS and
Windows (and a few operating systems too eventually, if I get the time).  It's
available as: <p>

ftp.informatik.uni-hamburg.de:/pub/virus/incoming/sfs_97.zip <p>

and is about 190K as is, or 510K decompressed.  You can't see the incoming
directory contents on this site, so just cd to /pub/virus/incoming and get
sfs97.zip, even if it looks as if there's nothing there. <p>

This is still a beta release (thus the obscure distribution method), it is
STRONGLY RECOMMENDED that you read the file readme.1st included in the
distribution before doing anything else.  Hopefully this will be the final beta
before the actual release. <p>

SFS has the following features: <p>

- The current implementation runs as a standard DOS device driver, and
    therefore works with plain old DOS as well as other software such as
    Windows, QEMM, Share, disk cacheing software, and so on. <p>

- Up to five encrypted volumes can be accessed at any one time, chosen from
    a selection of as many volumes as there is storage for. <p>

- Volumes can be quickly unmounted with a user-defined hotkey, or
    automatically unmounted after a certain amount of time.  They can also be
    converted back to unencrypted volumes or have their contents destroyed if
    required. <p>

- The encryption algorithms used have been selected to be free from any
    patent restrictions, and the software itself is not covered by US export
    restrictions as it was developed entirely outside the US (although once a
    copy is sent into the US it can't be re-exported). <p>

- SFS complies with a number of national and international data encryption
    standards, among them ANSI X3.106, Federal Information Processing Standard
    (FIPS) 180, Australian Standard 2805.5.2, ISO 10116:1991 and ISO
    10126-2:1991, and is on nodding terms with a several other relevant
    standards. <p>

- The documentation includes fairly in-depth analyses of various security
    aspects of the software, as well as complete design and programming details
    necessary to both create SFS-compatible software and to verify the
    algorithms used in SFS. <p>

- Reasonable throughput.  One beta-tester has reported a throughput of 170
    K/s for the basic version and 185 K/s for the 486+ version on his 486
    system when copying a file with the DOS copy command from one location on
    an SFS volume to another (I get about 90 K/s on my vanilla 386 box). <p>

Peter.
--
 pgut1@cs.aukuni.ac.nz||p_gutmann@cs.aukuni.ac.nz||gutmann_p@kosmos.wcc.govt.nz
peterg@kcbbs.gen.nz||peter@nacjack.gen.nz||peter@phlarnschlorpht.nacjack.gen.nz
             (In order of preference - one of 'em's bound to work)
              -- C++ will do for C what Algol 68 did for Algol -- <p>

</DOC>