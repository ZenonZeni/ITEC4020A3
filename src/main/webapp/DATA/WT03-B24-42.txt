
<DOC>
<DOCNO>WT03-B24-42</DOCNO>
<DOCOLDNO>IA053-000892-B034-223</DOCOLDNO>
<DOCHDR>
http://isse.gmu.edu:80/swse-ms/c-l-swse.html 129.174.40.15 19970123190852 text/html 5967
HTTP/1.0 200 Document follows
Date: Thu, 23 Jan 1997 19:07:43 GMT
Server: NCSA/1.5.2
Last-modified: Thu, 29 Aug 1996 16:27:14 GMT
Content-type: text/html
Content-length: 5784
</DOCHDR>
<HTML>
<HEAD>
<TITLE>Software Systems Engineering Courses (SWSE).</TITLE>
</HEAD> 
<BODY> 
<H1>Software Systems Engineering Courses (SWSE).</H1>
<P>
<HR>
<P>
<A NAME="swse619">619 Software Construction (3:3:0).</A> Prerequisites: SWSE foundation courses or
equivalent.  In-depth study of software construction using a modern language.
Concepts such as information hiding, data abstraction, concurrency, and 
object-oriented software construction are discussed.
<P>
<A NAME="swse620">620 Software Requirements and Prototyping (3:3:0).</A> Prerequisites: SWSE foundation
courses or equivalent.  In-depth study of methods, tools, notations, and validation
techniques for the analysis and specification of software requirements. Students
participate in a group project on software requirements.
<P>
<A NAME="swse621">621 Software Design (3:3:0).</A> Prerequisites: SWSE 619 or permission of instructor. 
Concepts and methods for the architectural design of large-scale software
systems. Fundamental design concepts and design notations are introduced. Several
design methods are presented and compared, with examples of their use. Students
participate in a group software design project.
<P>
<A NAME="swse623">623 Formal Methods and Models in Software Engineering (3:3:0).</A>
Prerequisites: SWSE foundation courses or equivalent.  Formal mechanisms for specifying, 
validating, and verifying software systems.  Program verification through Hoare's method 
and Dijkstra's weakest preconditions.  Formal specification via algebraic
specifications and abstract model specifications, including initial specification
and refinement towards implementation.  Integration of formal methods with
existing programming languages, and the application of formal methods to
requirements analysis, testing, safety analysis, and object-oriented approaches.
<P>
<A NAME="swse625">625 Software Project Management (3:3:0).</A>  Prerequisites:
 SWSE foundation courses or equivalent.  Lifecycle and process models; process 
metrics; planning for a software project; mechanisms for monitoring and controlling 
schedule, budget, quality, and productivity; and leadership, motivation, and team building.
<P>
<A NAME="swse626">626 Software Project Laboratory (3:3:6).</A>  Prerequisites: 
SWSE 619, 620, 621 and 625, or permission of instructor.  Students are involved 
in  analysis, design, implementation, and management of a software system project. 
Students work in teams to develop or modify a software product, applying sound principles 
of software systems engineering. Both industrial and academic standards are used to
assess the quality of the work products.
<P>
630 Software Engineering Economics (3:3:0). Prerequisite: SWSE  625. Covers
quantitative models of the software lifecycle; cost-effectiveness analysis in
software engineering; multiple-goal decision analysis; uncertainty and risk
analysis; software cost estimation; software engineering metrics; and
quantitative lifecycle management techniques.
<P>
631 Object-Oriented Software Development (3:3:0). Prerequisite:  SWSE 619. 
Principles of object-oriented design, development, and programming.  Includes
relationships between object-oriented design concepts and software engineering
principles, techniques of object-oriented design and programming, and applying
object-oriented techniques.
<P>
632 User Interface Design and Development (3:3:0).  Prerequisite: SWSE 619 or
permission of instructor. Principles of user interface design, development, and
programming. Includes user psychology and cognitive science, adaptive user
interfaces, icon and window design, command language design, user guidance
systems, and collaborative working.
<P>
635 Software Testing and Quality Assurance (3:3:0). Prerequisite: SWSE 619, or
permission of instructor.  Concepts and techniques for testing software and assuring
its quality.  Software testing at the unit, module, subsystem, and system levels. 
Automatic and manual techniques for generating and validating test data.  The
testing process, static vs. dynamic analysis, functional testing, inspections,
and reliability assessment.  
<P>
699 Special Topics in Software Systems Engineering (3:3:0). Prerequisite:
Permission of instructor. Special topics not occurring in the regular SWSE sequence.
May be repeated for credit when semester topic is different.
<P>
720 Advanced Software Requirements (3:3:0). Prerequisites: SWSE 620 and SWSE
621. State-of-the-art and state-of-the-practice in software requirements
engineering.  In-depth coverage of selected methods, tools, notations or
validation techniques for the analysis and specification of software
requirements.  The course work includes a project investigating or applying
approaches to requirements engineering.
<P>
721 Advanced Software Design Methods (3:3:0). Prerequisites: SWSE 620  and 621.
Study of advanced design methods for large-scale software systems, including
concurrent, real-time and distributed systems.  The course work includes a
project investigating or applying software design methods.
<P>
796 Directed Readings in Software Systems Engineering (3:3:0). Prerequisite:
Permission of instructor. Analysis and investigation of a contemporary problem in
software engineering. Prior approval by a faculty member who supervises the
student's work is required. Written report.
<P>
799 Thesis (6:0:0). Prerequisite: Permission of adviser.  A research project completed
under the supervision of a faculty member, which results in a technical report
accepted by a three-member faculty committee. The report must be defended in an
oral presentation.

<P>
<HR>
<A HREF = "ms-swse.html">Return to Master of Science in Software Systems Engineering.</A> <br>
<A HREF = "../index.html">Return to ISSE home page.</A>
</BODY>
</HTML> 
</DOC>